// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidonAdapterBidMachine
// swift-module-flags-ignorable: -enable-bare-slash-regex
import BidMachine
import BidMachineApiCore
import Bidon
@_exported import BidonAdapterBidMachine
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @objc final public class BidMachineDemandSourceAdapter : ObjectiveC.NSObject {
  final public let identifier: Swift.String
  final public let name: Swift.String
  final public let adapterVersion: Swift.String
  final public let sdkVersion: Swift.String
  final public func programmaticInterstitialDemandProvider() throws -> Bidon.AnyProgrammaticInterstitialDemandProvider
  final public func programmaticRewardedAdDemandProvider() throws -> Bidon.AnyProgrammaticRewardedAdDemandProvider
  final public func programmaticAdViewDemandProvider(context: Bidon.AdViewContext) throws -> Bidon.AnyProgrammaticAdViewDemandProvider
  final public func biddingInterstitialDemandProvider() throws -> Bidon.AnyBiddingInterstitialDemandProvider
  final public func biddingRewardedAdDemandProvider() throws -> Bidon.AnyBiddingRewardedAdDemandProvider
  final public func biddingAdViewDemandProvider(context: Bidon.AdViewContext) throws -> Bidon.AnyBiddingAdViewDemandProvider
  @objc override dynamic public init()
  @objc deinit
}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.ParameterizedInitializableAdapter {
  public struct Parameters : Swift.Codable {
    public func encode(to encoder: any Swift.Encoder) throws
    public init(from decoder: any Swift.Decoder) throws
  }
  final public var isInitialized: Swift.Bool {
    get
  }
  final public func initialize(parameters: BidonAdapterBidMachine.BidMachineDemandSourceAdapter.Parameters, completion: @escaping (Bidon.SdkError?) -> Swift.Void)
}
extension BidMachine.BidMachineBanner : Bidon.AdViewContainer {
  @_Concurrency.MainActor(unsafe) final public var isAdaptive: Swift.Bool {
    get
  }
}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.BiddingAdViewDemandSourceAdapter {}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.BiddingInterstitialDemandSourceAdapter {}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.BiddingRewardedAdDemandSourceAdapter {}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.ProgrammaticAdViewDemandSourceAdapter {}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.ProgrammaticInterstitialDemandSourceAdapter {}
extension BidonAdapterBidMachine.BidMachineDemandSourceAdapter : Bidon.ProgrammaticRewardedAdDemandSourceAdapter {}
