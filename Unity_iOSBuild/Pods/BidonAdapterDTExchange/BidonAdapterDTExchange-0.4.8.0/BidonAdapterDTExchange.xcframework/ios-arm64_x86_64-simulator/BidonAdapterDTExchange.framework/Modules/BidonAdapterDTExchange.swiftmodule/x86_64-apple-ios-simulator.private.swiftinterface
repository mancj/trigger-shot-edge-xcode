// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidonAdapterDTExchange
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Bidon
@_exported import BidonAdapterDTExchange
import Foundation
import IASDKCore
import Swift
import UIKit
import _Concurrency
import _StringProcessing
extension IASDKCore.IAAdView : Bidon.AdViewContainer {
  @_Concurrency.MainActor(unsafe) public var isAdaptive: Swift.Bool {
    get
  }
}
@_inheritsConvenienceInitializers @objc final public class DTExchangeDemandSourceAdapter : ObjectiveC.NSObject {
  @objc public static let identifier: Swift.String
  final public let identifier: Swift.String
  final public let name: Swift.String
  final public let adapterVersion: Swift.String
  final public let sdkVersion: Swift.String
  final public func directInterstitialDemandProvider() throws -> Bidon.AnyDirectInterstitialDemandProvider
  final public func directRewardedAdDemandProvider() throws -> Bidon.AnyDirectRewardedAdDemandProvider
  final public func directAdViewDemandProvider(context: Bidon.AdViewContext) throws -> Bidon.AnyDirectAdViewDemandProvider
  @objc override dynamic public init()
  @objc deinit
}
extension BidonAdapterDTExchange.DTExchangeDemandSourceAdapter : Bidon.ParameterizedInitializableAdapter {
  public struct Parameters : Swift.Codable {
    public var appId: Swift.String
    public func encode(to encoder: any Swift.Encoder) throws
    public init(from decoder: any Swift.Decoder) throws
  }
  final public var isInitialized: Swift.Bool {
    get
  }
  final public func initialize(parameters: BidonAdapterDTExchange.DTExchangeDemandSourceAdapter.Parameters, completion: @escaping (Bidon.SdkError?) -> Swift.Void)
}
extension IASDKCore.IAAdSpot : Bidon.DemandAd {
  @objc dynamic public var id: Swift.String {
    @objc get
  }
  @objc dynamic public var networkName: Swift.String {
    @objc get
  }
  @objc dynamic public var dsp: Swift.String? {
    @objc get
  }
}
extension BidonAdapterDTExchange.DTExchangeDemandSourceAdapter : Bidon.DirectAdViewDemandSourceAdapter {}
extension BidonAdapterDTExchange.DTExchangeDemandSourceAdapter : Bidon.DirectInterstitialDemandSourceAdapter {}
extension BidonAdapterDTExchange.DTExchangeDemandSourceAdapter : Bidon.DirectRewardedAdDemandSourceAdapter {}
