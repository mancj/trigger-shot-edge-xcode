// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidMachineVideoKit
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import BidMachineUtilsKit
@_exported import BidMachineVideoKit
import Foundation
import Swift
import UIKit.UIImage
import UIKit
import _Concurrency
import _StringProcessing
public protocol BidMachineVideoControllerDelegate : AnyObject {
  func videoController(_ controller: BidMachineVideoKit.BidMachineVideoController, didLoadLoad error: BidMachineUtilsKit.BidMachineError?)
  func videoController(_ controller: BidMachineVideoKit.BidMachineVideoController, controllerIsPlaying playing: Swift.Bool)
  func videoController(_ controller: BidMachineVideoKit.BidMachineVideoController, controllerDidStartPlaying error: BidMachineUtilsKit.BidMachineError?)
  func videoController(_ controller: BidMachineVideoKit.BidMachineVideoController, controllerDidFinishPlaying error: BidMachineUtilsKit.BidMachineError?)
  func videoController(_ controller: BidMachineVideoKit.BidMachineVideoController, controllerIsMuted muted: Swift.Bool)
  func videoController(_ controller: BidMachineVideoKit.BidMachineVideoController, controllerTimeDidChange currentTime: Foundation.TimeInterval, totalTime: Foundation.TimeInterval)
}
final public class BidMachineVideoController {
  weak final public var delegate: (any BidMachineVideoKit.BidMachineVideoControllerDelegate)?
  public init(_ configuration: Any)
  @objc deinit
}
extension BidMachineVideoKit.BidMachineVideoController {
  final public var container: UIKit.UIView {
    get
  }
  final public var player: any BidMachineVideoKit.VideoPlayerProtocol {
    get
  }
  final public func loadAd(adm: Swift.String)
}
public protocol VideoPlayerProtocol : AnyObject {
  func install()
  func uninstall()
  func invalidate()
  func play()
  func pause()
  func `repeat`()
  var isMuted: Swift.Bool { get set }
  var duration: Foundation.TimeInterval { get }
  var currentTime: Foundation.TimeInterval { get }
}
